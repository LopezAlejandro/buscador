<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\modules\crud\models\base;

use Yii;

/**
 * This is the base-model class for table "prg".
 *
 * @property integer $prg_id
 * @property integer $carrera
 * @property integer $materia
 * @property integer $catedra
 * @property integer $plan
 * @property integer $vale_desde
 * @property integer $vale_hasta
 * @property string $archivo
 * @property integer $activo
 *
 * @property \app\modules\crud\models\Carrera $carrera0
 * @property \app\modules\crud\models\Catedra $catedra0
 * @property \app\modules\crud\models\Materium $materia0
 * @property \app\modules\crud\models\Plan $plan0
 * @property string $aliasModel
 */
abstract class Prg extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'prg';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['carrera', 'materia', 'catedra', 'plan', 'vale_desde', 'archivo'], 'required'],
            [['carrera', 'materia', 'catedra', 'plan', 'vale_desde', 'vale_hasta', 'activo'], 'integer'],
            [['archivo'], 'string', 'max' => 100],
            [['carrera'], 'exist', 'skipOnError' => true, 'targetClass' => \app\modules\crud\models\Carrera::className(), 'targetAttribute' => ['carrera' => 'carrera_id']],
            [['materia'], 'exist', 'skipOnError' => true, 'targetClass' => \app\modules\crud\models\Materium::className(), 'targetAttribute' => ['materia' => 'materia_id']],
            [['plan'], 'exist', 'skipOnError' => true, 'targetClass' => \app\modules\crud\models\Plan::className(), 'targetAttribute' => ['plan' => 'plan_id']],
            [['catedra'], 'exist', 'skipOnError' => true, 'targetClass' => \app\modules\crud\models\Catedra::className(), 'targetAttribute' => ['catedra' => 'catedra_id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'prg_id' => Yii::t('models', 'Prg ID'),
            'carrera' => Yii::t('models', 'Carrera'),
            'materia' => Yii::t('models', 'Materia'),
            'catedra' => Yii::t('models', 'Catedra'),
            'plan' => Yii::t('models', 'Plan'),
            'vale_desde' => Yii::t('models', 'Vale Desde'),
            'vale_hasta' => Yii::t('models', 'Vale Hasta'),
            'archivo' => Yii::t('models', 'Archivo'),
            'activo' => Yii::t('models', 'Activo'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCarrera0()
    {
        return $this->hasOne(\app\modules\crud\models\Carrera::className(), ['carrera_id' => 'carrera']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCatedra0()
    {
        return $this->hasOne(\app\modules\crud\models\Catedra::className(), ['catedra_id' => 'catedra']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMateria0()
    {
        return $this->hasOne(\app\modules\crud\models\Materium::className(), ['materia_id' => 'materia']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlan0()
    {
        return $this->hasOne(\app\modules\crud\models\Plan::className(), ['plan_id' => 'plan']);
    }


    
    /**
     * @inheritdoc
     * @return \app\models\query\PrgQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\PrgQuery(get_called_class());
    }


}
